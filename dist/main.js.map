{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;ACnBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;;AANA;AAAA;AAAA;AAUA;AACA;;;;;;;;;;;;;;;;ACnBA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC5BA;AAIA;AACA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AAGA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AA+BA;AAEA;AACA;AACA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAQA;AACA;AAEA;AAEA;AACA;AASA;AAEA;AACA;AAOA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAIA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sources":["webpack://linkedin-filter/./src/components/observeTitle.ts","webpack://linkedin-filter/./src/components/removeStaticAds.ts","webpack://linkedin-filter/./src/const.ts","webpack://linkedin-filter/./src/utils.ts","webpack://linkedin-filter/webpack/bootstrap","webpack://linkedin-filter/webpack/runtime/define property getters","webpack://linkedin-filter/webpack/runtime/hasOwnProperty shorthand","webpack://linkedin-filter/webpack/runtime/make namespace object","webpack://linkedin-filter/./src/main.ts"],"sourcesContent":["export const observeTitle = () => {\n    // select the target node\n    const target = document.querySelector('title') as HTMLTitleElement;\n\n    // create an observer instance\n    var titleObserver = new MutationObserver((mutations) => {\n        const titleText = (mutations[0].target as HTMLElement)\n            .innerText as string;\n        if (titleText.includes('(')) {\n            console.log('page title hidden');\n            target.innerText = titleText.slice(4);\n        }\n    });\n\n    // configuration of the observer:\n    var config = { subtree: true, characterData: true, childList: true };\n\n    // pass in the target node, as well as the observer options\n    titleObserver.observe(target, config);\n};\n","import { IWaitForSelector, waitForSelector } from '../utils';\n\nexport const removeStaticAds = () => {\n    const selectors = [\n        'section.ad-banner-container.is-header-zone',\n        'section.ad-banner-container.artdeco-card',\n        'div > div > aside > div.scaffold-layout__sticky.scaffold-layout__sticky--is-active.scaffold-layout__sticky--lg > div > section > iframe',\n    ];\n    for (const selector of selectors) {\n        waitForSelector(\n            selector,\n            () => {\n                const element = document.querySelector(selector) as HTMLElement;\n                element.style.display = 'none';\n            },\n            10,\n            1000\n        );\n    }\n};\n","export const filterIconHtml = (\n    FILTER_CLASS: string,\n    filterIconIdentifier: string,\n    filterSvgClass: string\n) => `<div class=\"${FILTER_CLASS}\">\n                    <svg ${filterIconIdentifier} class=\"${filterSvgClass}\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" id=\"Capa_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\" \n                        style=\"enable-background:new 0 0 512 512;\" xml:space=\"preserve\"\n                        >\n                            <g>\n                                <path d=\"M276,246c-5.52,0-10,4.48-10,10c0,5.52,4.48,10,10,10c5.52,0,10-4.48,10-10C286,250.48,281.52,246,276,246z\"/>\n                            </g>\n                            <g>\n                                <path d=\"M472,26H40C17.944,26,0,43.944,0,66c0,22.097,17.898,40,40,40h11.194L206,299.508V476c0,3.466,1.795,6.685,4.743,8.506    c2.948,1.823,6.63,1.987,9.729,0.438l80-40C303.86,443.25,306,439.788,306,436V299.508L460.806,106H472c22.056,0,40-17.944,40-40    C512,43.903,494.102,26,472,26z M286,429.82l-60,30V306h60V429.82z M291.193,286h-70.387l-144-180h358.388L291.193,286z M472,86    H40c-11.045,0-20-8.954-20-20c0-11.028,8.972-20,20-20h432c11.045,0,20,8.954,20,20C492,77.028,483.028,86,472,86z\"/>\n                            </g>\n                            <g>\n                                <path d=\"M379.027,128.191c-4.312-3.451-10.606-2.75-14.056,1.562l-71.33,89.16c-3.45,4.313-2.75,10.606,1.562,14.056    c4.304,3.443,10.598,2.76,14.056-1.562l71.33-89.16C384.039,137.934,383.34,131.642,379.027,128.191z\"/>\n                            </g>\n                        </svg>\n                    </div>`;\n\nexport const classesToHide = [\n    '.feed-shared-update-v2__update-content-wrapper',\n    '.feed-shared-update-v2__description-wrapper',\n    '.feed-shared-update-v2__content',\n    '.social-details-social-activity',\n    '.Elevation-0dp',\n    '.ad-banner-container',\n    '.feed-shared-document__container',\n];\n","export const debounce = <T extends (...args: any[]) => any>(\n    callback: T,\n    waitFor: number\n) => {\n    let timeout: ReturnType<typeof setTimeout>;\n    return (...args: Parameters<T>): ReturnType<T> => {\n        let result: any;\n        timeout && clearTimeout(timeout);\n        timeout = setTimeout(() => {\n            result = callback(...args);\n        }, waitFor);\n        return result;\n    };\n};\n\nexport const getPosition = (str: string, subString: string, index: number) => {\n    return str.split(subString, index).join(subString).length;\n};\n\nexport const getParentEl = (el: Element) => {\n    const MAX_ELEMENTS = 10;\n    // let counter = 0;\n    while (!el.hasAttribute('data-id')) {\n        el = el.parentElement!;\n    }\n    return el;\n};\n\nexport interface IWaitForSelector {\n    selector: string;\n    callback: any;\n    limit: number;\n    delay: number;\n}\n\nexport const waitForSelector = (\n    selector: string,\n    callback: any,\n    limit = 30,\n    delay = 300\n) => {\n    if (limit === 0) return;\n    if (document.querySelector(selector)) {\n        callback();\n    } else {\n        setTimeout(() => {\n            waitForSelector(selector, callback, limit--);\n        }, delay);\n    }\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { classesToHide } from './const';\nimport { filterIconHtml } from './const';\nimport { observeTitle } from './components/observeTitle';\nimport { removeStaticAds } from './components/removeStaticAds';\nimport { debounce, getParentEl, getPosition, waitForSelector } from './utils';\n\n/// for id extraction\nexport const ID_SEPARATOR = ':';\nexport const ID_SEPARATOR_INDEX = 3;\nexport const ID_SEPARATOR_INDEX_AGGREGATE = 5;\n\nexport const filterMainClass = 'filter-ad';\nexport const filterIconIdentifier = `filter-icon-zzz`;\nexport const filterSvgClass = 'filterSvg';\nexport const LISTENER_ADDED_CLASS = 'listenerAdded';\nexport const MAIN_FEED_SELECTOR = 'main#main';\n\nexport const DEBUG_MODE = false;\n\nwindow.onload = () => {\n    observeTitle();\n\n    if (window.location.href.includes('linkedin.com/feed')) {\n        console.log('First entry to feed');\n        init();\n    }\n};\n\nchrome.runtime.onMessage.addListener(function (request, sender, sendResponse) {\n    if (request.message === 'enteredFeed') {\n        console.log('Enter feed from another section in linkedIn');\n        init();\n    }\n});\n\nconst init = () => {\n    addCss();\n    waitForSelector(MAIN_FEED_SELECTOR, observeMainFeed);\n    removeStaticAds();\n};\n\nconst observeMainFeed = () => {\n    const target = document.querySelector(MAIN_FEED_SELECTOR) as HTMLDivElement;\n    const mainFeedObserver = new MutationObserver(() => {\n        DEBUG_MODE && console.log('change observed');\n        debounceProcessNewPosts();\n    });\n    const config = { subtree: true, characterData: true, childList: true };\n    mainFeedObserver.observe(target, config);\n};\n\nconst processNewPosts = () => {\n    DEBUG_MODE && console.log('entered function: processNewPosts');\n    hideOnLoadOrScroll();\n    hidePromotedPosts();\n    insertFilter();\n};\n\nconst debounceProcessNewPosts = debounce(processNewPosts, 400);\n\nconst addCss = () => {\n    document.head.insertAdjacentHTML(\n        'beforeend',\n        `<style>\n            .${filterMainClass}{\n                border-radius: 50px;\n                position: absolute;\n                right: 46px;\n                top: 4px;\n                z-index: 1;\n                cursor: pointer;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                height: 3.2rem;\n                width: 3.2rem;\n            }\n        \n            .${filterMainClass}:hover{\n                background-color: rgb(235,235,235);\n            }\n            .${filterMainClass}:active{\n                background-color: #D9D9D9;\n            }\n\n            .${filterSvgClass}{\n                z-index: 0;\n                height: 20px;\n                fill: #797979;\n            }\n            </style>`.trim()\n    );\n};\n\nconst hidePromotedPosts = () => {\n    //choosing page elements to hide\n    let arr = [\n        ...Array.from(\n            document.querySelectorAll(\n                'span.feed-shared-actor__sub-description.t-12.t-normal.t-black--light'\n            )\n        ),\n    ]; // get all the divs in an array\n    arr = arr.filter((item) => (item as HTMLElement).innerText == 'Promoted');\n\n    arr.forEach((promoted) => {\n        (promoted as HTMLElement).innerText = 'Hidden by LinkedIn Plus';\n        (promoted.parentNode!.parentNode!.parentNode!\n            .parentNode as HTMLElement)!.style.display = 'none';\n    });\n    arr.length && console.log(`${arr.length} promoted posts hidden`);\n};\n\nconst insertFilter = () => {\n    // insert filter icon\n    const optionIcons = [\n        ...Array.from(\n            document.querySelectorAll(\n                'li-icon[type=\"ellipsis-horizontal-icon\"][aria-label=\"Open control menu\"]:not(.filterAdded)'\n            )\n        ),\n    ];\n\n    optionIcons.forEach((optionIcon) => {\n        optionIcon.classList.add('filterAdded'); //add a class so it won't be re-added to the array\n\n        //inserted high, in order not to disappear when hiding children\n        (\n            optionIcon.parentNode!.parentNode!.parentNode!\n                .parentNode as HTMLElement\n        ).insertAdjacentHTML(\n            'beforebegin',\n            filterIconHtml(\n                filterMainClass,\n                filterIconIdentifier,\n                filterSvgClass\n            )\n        );\n    });\n\n    //insert listener on filter icon\n    const filterIcons = [\n        ...Array.from(\n            document.querySelectorAll(\n                `.${filterMainClass}:not(.${LISTENER_ADDED_CLASS})`\n            )\n        ),\n    ];\n    filterIcons.forEach((filterIcon) => {\n        filterIcon.classList.add(LISTENER_ADDED_CLASS);\n        filterIcon.addEventListener('click', (e) => {\n            e.stopPropagation();\n\n            handleFilterClick(e.target as HTMLElement);\n        });\n    });\n};\n\nconst handleFilterClick = (eventTarget: HTMLElement) => {\n    // to avoid propagation from other elements\n    if (\n        eventTarget!.hasAttribute(filterIconIdentifier) ||\n        eventTarget!.parentElement!.parentElement!.hasAttribute(\n            filterIconIdentifier\n        ) || //in case icon inside path was clicked\n        eventTarget!.classList.contains(filterMainClass)\n    ) {\n        const parent = getParentEl(eventTarget) as Element;\n        DEBUG_MODE &&\n            console.log(\n                `Got parent element:\n      ${parent}`\n            );\n        const id = getId(parent);\n        const idIndexOnMemory = isOnMemory(id);\n\n        if (idIndexOnMemory === -1) {\n            DEBUG_MODE && console.log(`Ad ID on memory: NO`);\n            hideByParentElement(parent);\n        } else {\n            DEBUG_MODE && console.log(`Ad ID on memory: YES`);\n            unhidePost(id);\n        }\n\n        saveOrRemoveIdFromMemory(id, idIndexOnMemory);\n    } else {\n        // console.log(`target doesn't have att '${filterIconIdentifier}'`);\n        // console.log(e.target);\n    }\n};\n\nconst hideByParentElement = (el: Element) => {\n    //el = data-id=\"urn:li:activity...\n    if (el.hasAttribute('data-id')) {\n        const success = hideAllChildren(el);\n        if (success) {\n            el.classList.add('hiddenPost');\n        }\n    } else {\n        console.log(`ERROR. trying to hide parent with wrong el.`);\n    }\n};\n\nconst hideAllChildren = (el: Element) => {\n    DEBUG_MODE && console.log('Trying to hide ads CHILD ELEMENTS');\n\n    const dataUrnEl = getDataUrnEl(el);\n    if (dataUrnEl) {\n        const childrenToHide = el.querySelectorAll(classesToHide.toString());\n        childrenToHide.forEach((child) => {\n            (child as HTMLElement).style.display = 'none';\n        });\n\n        return true;\n    } else {\n        return false;\n    }\n};\n\nconst getDataUrnEl = (el: Element) => {\n    if (DEBUG_MODE) {\n        console.log('Trying to get data-urn element, from the following:');\n        console.log(el);\n    }\n\n    const dataUrnEl = el.querySelector('[data-urn]');\n\n    if (DEBUG_MODE) {\n        console.log('Found the following data-urn element:');\n        console.log(dataUrnEl);\n    }\n\n    return dataUrnEl;\n};\n\nconst unhidePost = (id: string) => {\n    // get main parent element\n    const el = document.querySelector(`[data-id*=\"urn:li:activity:${id}\"]`);\n    if (el) {\n        el.classList.remove('hiddenPost');\n\n        // unhide children\n        const dataUrnEl = getDataUrnEl(el)!;\n\n        const childrenToUnhide = el.querySelectorAll(classesToHide.toString());\n        childrenToUnhide.forEach((child) => {\n            (child as HTMLElement).removeAttribute('style');\n        });\n    }\n};\n\nconst readFromLocalStorage = () => {\n    // Retrieve your data from locaStorage (get from localStorage or create new Obj)\n    const memoryData = localStorage.getItem('filtered')\n        ? JSON.parse(localStorage.getItem('filtered')!)\n        : [];\n    return [...memoryData];\n};\n\nconst isOnMemory = (id: string): number => {\n    const memory = readFromLocalStorage();\n    let index = -1;\n    memory.forEach((ad, i) => {\n        if (ad.id === id) index = i;\n    });\n    return index;\n};\n\nconst saveOrRemoveIdFromMemory = (\n    id: string,\n    idIndexOnMemory: number\n): void => {\n    const memory = { filtered: readFromLocalStorage() };\n\n    if (id != null) {\n        if (idIndexOnMemory === -1) {\n            memory.filtered.push({ id: id, date: Date.now() });\n            console.log(`'${id}' ADDED`);\n        } else {\n            memory.filtered.splice(idIndexOnMemory, 1);\n            console.log(`'${id}' REMOVED`);\n        }\n    }\n    localStorage.setItem('filtered', JSON.stringify(memory.filtered));\n};\n\n// Hide on first load id's from localStorage\nconst hideOnLoadOrScroll = () => {\n    //read again from memory\n    const memory = { filtered: readFromLocalStorage() };\n\n    DEBUG_MODE &&\n        console.log(\n            `filtering saved posts by id: ${memory.filtered.length} posts`\n        );\n\n    memory.filtered.forEach(({ id }) => {\n        const el = document.querySelector(\n            // :not(.hiddenPost) - in order not to double hide posts\n            `[data-id=\"urn:li:activity:${id}\"]:not(.hiddenPost)`\n        );\n        if (el) {\n            console.log(`ID found. hiding ID:${id}`);\n            hideByParentElement(el);\n        }\n    });\n};\n\nconst getId = (el: Element) => {\n    //el = data-id=\"urn:li:activity...\n    const idText = el.getAttribute('data-id') as string;\n\n    DEBUG_MODE && (console.log('Trying to get id from:'), console.log(idText));\n\n    let id;\n    //check if id aggregated\n    if (idText.includes('aggregate')) {\n        DEBUG_MODE && console.log('id is aggregated');\n        const countOfColon = (idText.match(/:/g) || []).length;\n        const position = getPosition(idText, ID_SEPARATOR, countOfColon);\n        id = [...Array.from(idText)]\n            .slice(position + 1, idText.length - 2) //without starting colon, and without ending )\n            .join('');\n    } else {\n        //not aggregated\n        const position = getPosition(idText, ID_SEPARATOR, ID_SEPARATOR_INDEX);\n        id = [...Array.from(idText)].slice(position + 1).join('');\n    }\n\n    DEBUG_MODE && console.log(`ID returned from getId: ${id}`);\n    return id;\n};\n"],"names":[],"sourceRoot":""}